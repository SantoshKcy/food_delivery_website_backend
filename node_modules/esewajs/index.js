const { Transaction } = require("../models/transaction");

// Dynamically import esewajs since it's an ESM module
async function loadEsewaModule() {
  return await import("esewajs");
}

// Esewa Initiate Payment Controller
const EsewaInitiatePayment = async (req, res) => {
  const { amount, productId } = req.body;
  try {
    const { EsewaPaymentGateway } = await loadEsewaModule(); // Import esewajs dynamically

    const reqPayment = await EsewaPaymentGateway(
      amount, 0, 0, 0, productId,
      process.env.MERCHANT_ID, process.env.SECRET,
      process.env.SUCCESS_URL, process.env.FAILURE_URL,
      process.env.ESEWAPAYMENT_URL
    );

    if (!reqPayment) {
      return res.status(400).json({ message: "Error sending data" });
    }

    if (reqPayment.status === 200) {
      const transaction = new Transaction({
        product_id: productId,
        amount,
        status: "PENDING"
      });
      await transaction.save();

      return res.json({ url: reqPayment.request.res.responseUrl });
    }
  } catch (error) {
    console.error("Esewa Payment Error:", error);
    return res.status(500).json({ message: "Internal Server Error", error: error.message });
  }
};

// Esewa Payment Status Controller
const paymentStatus = async (req, res) => {
  const { product_id } = req.body;
  try {
    const { EsewaCheckStatus } = await loadEsewaModule(); // Import esewajs dynamically

    // Find the transaction in the database
    const transaction = await Transaction.findOne({ product_id });
    if (!transaction) {
      return res.status(404).json({ message: "Transaction not found" });
    }

    // Check payment status with Esewa
    const paymentStatusCheck = await EsewaCheckStatus(
      transaction.amount, transaction.product_id,
      process.env.MERCHANT_ID, process.env.ESEWAPAYMENT_STATUS_CHECK_URL
    );

    if (paymentStatusCheck.status === 200) {
      transaction.status = paymentStatusCheck.data.status;
      await transaction.save();

      return res.status(200).json({ message: "Transaction status updated", status: transaction.status });
    }

    return res.status(400).json({ message: "Failed to update transaction status" });
  } catch (error) {
    console.error("Payment Status Check Error:", error);
    return res.status(500).json({ message: "Internal Server Error", error: error.message });
  }
};

// Export controllers using CommonJS
module.exports = { EsewaInitiatePayment, paymentStatus };
